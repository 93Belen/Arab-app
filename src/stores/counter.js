import { defineStore } from 'pinia'

export const useCounterStore = defineStore('counter', {
  state: () => ({ 
    isFlipped: false,
    right: [],
    wrong: [],
    alphabet: [
    ["ا", "Alif"],
    ["ب", "Ba"],
    ["ت", "Ta"],
    ["ث", "Za"],
    ["ج", "Yim"],
    ["ح", "Ha"],
    ["خ", "Ja"],
    ["د", "Dal"],
    ["ذ", "Dhal"],
    ["ر", "Ra"],
    ["ز", "Za"],
    ["س", "Sin"],
    ["ش", "Shin"],
    ["ص", "Saad"],
    ["ض", "Daad"],
    ["ط", "Taa"],
    ["ظ", "Zaa"],
    ["ع", "Ayn"],
    ["غ", "Ghayn"],
    ["ف", "Fa"],
    ["ق", "Qaf"],
    ["ك", "Kaf"],
    ["ل", "Lam"],
    ["م", "Mim"],
    ["ن", "Nun"],
    ["ه", "Ha"],
    ["و", "Waw"],
    ["ي", "Ya"],
    ],
    completeAlphabet: [
      ["ا", "Alif"],
      ["ب", "Ba"],
      ["بـ", "Ba initial"],
      ["ـبـ", "Ba middle"],
      ["ـب", "Ba final"],
      ["ت", "Ta"],
      ["تـ", "Ta initial"],
      ["ـتـ", "Ta middle"],
      ["ـت", "Ta final"],
      ["ث", "Tha"],
      ["ثـ", "Tha initial"],
      ["ـثـ", "Tha middle"],
      ["ـث", "Tha final"],
      ["ج", "Jim"],
      ["جـ", "Jim middle"],
      ["ـجـ", "Jim initial"],
      ["ـج", "Jim final"],
      ["ح", "Ha"],
      ["حـ", "Ha middle"],
      ["ـحـ", "Ha initial"],
      ["ـح", "Ha final"],
      ["خ", "Kha"],
      ["خـ", "Kha middle"],
      ["ـخـ", "Kha initial"],
      ["ـخ", "Kha final"],
      ["د", "Dal"],
      ["د", "Dal"],
      ["ذ", "Dhal"],
      ["ذ", "Dhal"],
      ["ر", "Ra"],
      ["ر", "Ra"],
      ["ز", "Zay"],
      ["ز", "Zay"],
      ["س", "Sin"],
      ["سـ", "Sin middle"],
      ["ـسـ", "Sin initial"],
      ["ـس", "Sin final"],
      ["ش", "Shin"],
      ["شـ", "Shin middle"],
      ["ـشـ", "Shin initial"],
      ["ـش", "Shin final"],
      ["ص", "Sad"],
      ["صـ", "Sad middle"],
      ["ـصـ", "Sad initial"],
      ["ـص", "Sad final"],
      ["ض", "Dad"],
      ["ضـ", "Dad middle"],
      ["ـضـ", "Dad initial"],
      ["ـض", "Dad final"],
      ["ط", "Taa"],
      ["طـ", "Taa middle"],
      ["ـطـ", "Taa initial"],
      ["ـط", "Taa final"],
      ["ظ", "Zaa"],
      ["ظـ", "Zaa middle"],
      ["ـظـ", "Zaa initial"],
      ["ـظ", "Zaa final"],
      ["ع", "Ayn"],
      ["عـ", "Ayn middle"],
      ["ـعـ", "Ayn initial"],
      ["ـع", "Ayn final"],
      ["غ", "Ghayn"],
      ["غـ", "Ghayn middle"],
      ["ـغـ", "Ghayn initial"],
      ["ـغ", "Ghayn final"],
      ["ف", "Fa"],
      ["فـ", "Fa middle"],
      ["ـفـ", "Fa initial"],
      ["ـف", "Fa final"],
      ["ق", "Qaf"],
      ["قـ", "Qaf middle"],
      ["ـقـ", "Qaf initial"],
      ["ـق", "Qaf final"],
      ["ك", "Kaf"],
      ["كـ", "Kaf middle"],
      ["ـكـ", "Kaf initial"],
      ["ـك", "Kaf final"],
      ["ل", "Lam"],
      ["لـ", "Lam middle"],
      ["ـلـ", "Lam initial"],
      ["ـل", "Lam final"],
      ["م", "Mim"],
      ["مـ", "Mim middle"],
      ["ـمـ", "Mim initial"],
      ["ـم", "Mim final"],
      ["ن", "Nun"],
      ["نـ", "Nun middle"],
      ["ـنـ", "Nun initial"],
      ["ـن", "Nun final"],
      ["ه", "Ha"],
      ["هـ", "Ha middle"],
      ["ـهـ", "Ha initial"],
      ["ـه", "Ha final"],
      ["و", "Waw"],
      ["و", "Waw"],
      ["ي", "Ya"],
      ["يـ", "Ya middle"],
      ["ـيـ", "Ya initial"],
      ["ـي", "Ya final"]
    ],
    choosenLetter: 0
   }),
  actions: {
    flip(param) {
      this.isFlipped = param
    },
    addRight(param){
      this.right.push(param)
      let indexToRemove = this.wrong.indexOf(param)
      if(indexToRemove !== -1){
        this.wrong.splice(indexToRemove, 1)
      }
    },
    addWrong(param){
      this.wrong.push(param)
    },
    changeChoosenLetter(){
      const randomIndex = Math.floor(Math.random() * this.alphabet.length);
      this.choosenLetter = randomIndex
    },
    changeChoosenLetterFromComplete(){
      const randomIndex = Math.floor(Math.random() * this.completeAlphabet.length);
      this.choosenLetter = randomIndex
    }
  }
})